[{"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\index.js":"1","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\reportWebVitals.js":"2","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\App.js":"3","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\Expenses\\Expense.js":"4","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\NewExpense\\NewExpense.js":"5","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\Expenses\\ExpenseItem.js":"6","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\NewExpense\\ExpenseForm.js":"7","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\UI\\Card.js":"8","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\Expenses\\ExpenseDate.js":"9","C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\ExpenseFilter\\ExpensesFilter.js":"10"},{"size":552,"mtime":1651233189338,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1651233189339,"results":"13","hashOfConfig":"12"},{"size":1128,"mtime":1651413383939,"results":"14","hashOfConfig":"12"},{"size":1260,"mtime":1651403513709,"results":"15","hashOfConfig":"12"},{"size":956,"mtime":1651377100787,"results":"16","hashOfConfig":"12"},{"size":1258,"mtime":1651233189334,"results":"17","hashOfConfig":"12"},{"size":3637,"mtime":1651339836426,"results":"18","hashOfConfig":"12"},{"size":297,"mtime":1651233189337,"results":"19","hashOfConfig":"12"},{"size":551,"mtime":1651233189332,"results":"20","hashOfConfig":"12"},{"size":722,"mtime":1651403212904,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v3qtqd",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\index.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\reportWebVitals.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\App.js",["54"],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\Expenses\\Expense.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\NewExpense\\NewExpense.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\Expenses\\ExpenseItem.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\NewExpense\\ExpenseForm.js",["55"],[],"import React, { useState } from 'react';\r\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\r\n\r\nimport './ExpenseForm.css';\r\n\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enterTitle, setEnteredTitle] = useState('');\r\n    const [enterAmount, setEnteredAmount]= useState('');\r\n    const [enterDate, setEnteredDate]= useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enterTitle: '',\r\n    //     enterAmount: '',\r\n    //     enterDate: ''\r\n    // });\r\n\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n       // setUserInput({\r\n        //    ...userInput,\r\n        //    enterTitle: event.target.value\r\n        //});\r\n\r\n        //나중에 이전 state가 현재 state에 영향을 주는 것이라면 밑에 방식으로 하라\r\n        // setUserInput((prevState) => {\r\n        //     return ({\r\n        //         ...prevState, enteredTitle: event.target.value\r\n        //     });\r\n        // });\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    //     setUserInput({\r\n    //         ...userInput,\r\n    //         enterAmount: event.target.value\r\n    //     });\r\n    };\r\n    const DateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enterDate: event.target.value\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enterTitle,\r\n            amount: enterAmount,\r\n            date: new Date(enterDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n        //submitHandler안의 오브젝트들은 우선순위에 맞게 위에서 아래로 정렬했다.\r\n    };\r\n//onSubmit이 왜 필요한가?\r\n//input태그에서 발생하는 submit이벤트를 처리할 수 있다...\r\n//preventDefault is built into javascript\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enterTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min=\"0.01\" step=\"0.01\" value={enterAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min=\"2019-01-01\" max=\"2022-12-31\" value={enterDate} onChange={DateChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__actions\">\r\n                    <button type=\"submit\" >Add Expense</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n// onChange 이벤트는 사용자의 입력이 어떤 식으로든 변경될 때 발생합니다\r\n//input 태그안의 value는 초깃값을 의미하는데 이를 enter시리즈에 바인딩을 하면\r\n//이벤트가 일어날 때 입력한 값이 먼저 set시리지에 저장이 되고 제출된 그 값이 onSubmit 함수를 통해 expenseDate에 저장이 된다.\r\n//하지만 그 값이 화면상에 그대로 노출되어있는데 이 값을 초기화해주기 위해 value에 default값을 넣어주어서 마무리했다.\r\nexport default ExpenseForm;",[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\Expenses\\ExpenseDate.js",[],[],"C:\\Users\\cosmo\\OneDrive\\바탕 화면\\react-guide\\src\\components\\ExpenseFilter\\ExpensesFilter.js",["56","57"],[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":40},{"ruleId":"58","severity":1,"message":"63","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"64","line":6,"column":19,"nodeType":"60","messageId":"61","endLine":6,"endColumn":28},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'scryRenderedComponentsWithType' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used."]