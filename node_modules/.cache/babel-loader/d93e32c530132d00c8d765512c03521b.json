{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmo\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react-guide\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css'; //import ExpenseItem from './components/ExpenseItem.js';\n\nimport Expense from './components/Expenses/Expense.js';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSE = [{\n  id: 'e1',\n  title: 'Toilet Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'New TV',\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\n\nconst App = () => {\n  _s();\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE); // const addExpenseHandler = expense => {\n  //   setExpenses([expense, ...expenses]);\n  // }; >> 최근 데이터 갱신에 의존하는 state\n\n  const addExpenseHandler = expense => {\n    setExpenses(preExpenses => {\n      return [expense, ...preExpenses];\n    });\n  }; // >> 나중 데이터 갱신에 의존하는 state\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expense, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}; //이미 상위, 하위 파일로 연결되어있는데 굳이 lifting을 할 이유가 있는가?>\n//하위 파일에서 이벤트로 인해 발생한 데이터를 부모 컴포넌트로 보내 줘야할 때를 보여주고 잇다\n\n\n_s(App, \"jKbqi9MX3vGYBJgzXx1+T6GNGWQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/cosmo/OneDrive/바탕 화면/react-guide/src/App.js"],"names":["React","useState","Expense","NewExpense","DUMMY_EXPENSE","id","title","amount","date","Date","App","expenses","setExpenses","addExpenseHandler","expense","preExpenses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,MAAM,EAAE,KAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADoB,EAOpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AACYC,EAAAA,KAAK,EAAE,QADnB;AAEEC,EAAAA,MAAM,EAAE,MAFV;AAGEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHR,CAPoB,EAYpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAZoB,EAkBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,MAAM,EAAE,GAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAlBoB,CAAtB;;AA0BA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACG,aAAD,CAAxC,CAFgB,CAMhB;AACA;AACA;;AAEA,QAAMS,iBAAiB,GAAGC,OAAO,IAAI;AACnCF,IAAAA,WAAW,CAAEG,WAAD,IAAiB;AAC3B,aAAO,CAACD,OAAD,EAAU,GAAGC,WAAb,CAAP;AACD,KAFU,CAAX;AAGD,GAJD,CAVgB,CAcb;;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAIF;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtBD,C,CAuBA;AACA;;;GAxBMD,G;;KAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n//import ExpenseItem from './components/ExpenseItem.js';\r\nimport Expense from './components/Expenses/Expense.js';\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\n\r\nconst DUMMY_EXPENSE = [\r\n  { \r\n    id: 'e1',\r\n    title: 'Toilet Paper',\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { \r\n    id: 'e2', title: 'New TV', \r\n    amount: 799.49, \r\n    date: new Date(2021, 2, 12) \r\n  },\r\n  { \r\n    id: 'e3',\r\n    title: 'Car Insurance',\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  { \r\n    id: 'e4',\r\n    title: 'New Desk (Wooden)',\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  \r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\r\n\r\n  \r\n  \r\n  // const addExpenseHandler = expense => {\r\n  //   setExpenses([expense, ...expenses]);\r\n  // }; >> 최근 데이터 갱신에 의존하는 state\r\n\r\n  const addExpenseHandler = expense => {\r\n    setExpenses((preExpenses) => {\r\n      return [expense, ...preExpenses]\r\n    });\r\n  }; // >> 나중 데이터 갱신에 의존하는 state\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NewExpense onAddExpense = {addExpenseHandler}/>\r\n      <Expense items={expenses}/>\r\n    </div>\r\n  );\r\n};\r\n//이미 상위, 하위 파일로 연결되어있는데 굳이 lifting을 할 이유가 있는가?>\r\n//하위 파일에서 이벤트로 인해 발생한 데이터를 부모 컴포넌트로 보내 줘야할 때를 보여주고 잇다\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}